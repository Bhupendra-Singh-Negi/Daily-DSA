// https://leetcode.com/problems/combination-sum-iii/
class Solution {
    public void recur(int k, int n, List<List<Integer>> ans, List<Integer> list, int m){
        if(k==0){
            if(n==0) ans.add(new ArrayList<>(list));
            return;
        }
        for(int i=m;i<=9;i++){
            if(n<i) break;
        if(n>=i){
            k--;
            n-=i;
            list.add(i);
            recur(k,n,ans,list,i+1);
            list.remove(list.size()-1);
            n+=i;
            k++;
        }}
    }
    public List<List<Integer>> combinationSum3(int k, int n) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> list=new ArrayList<>();

        recur(k,n,ans,list,1);
        return ans;

    }
}
