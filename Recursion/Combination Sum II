// https://leetcode.com/problems/combination-sum-ii/submissions/1697193037/
class Solution {
    public void recur(int[] candidates, int target, int index, List<List<Integer>> ans, List<Integer> list ){
        if(target==0){
            ans.add(new ArrayList<>(list));
            return;
        }
        for(int i=index; i<candidates.length;i++){
            if(i!=index && candidates[i]==candidates[i-1]) continue;
            if(target>=candidates[i]){
                list.add(candidates[i]);
                recur(candidates,target-candidates[i],i+1,ans,list);
                list.remove(list.size()-1);
            }
        }
    }

    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> list = new ArrayList<>();
        Arrays.sort(candidates);
        recur(candidates, target, 0, ans, list);
        return ans;
    }
}
